@using DataAccess
@using DataAccess.Models.LoreModels;

@inject ICrud Crud
@inject NavigationManager NavManager

<PageTitle>Lore: @Model!.Name</PageTitle>

<h1 class="text-light">@Model!.Name</h1>

@if (Model.Description != null)
{
    <h3 class="text-light lore-info">Description:</h3>
    <p class="text-light lore-info">@Model.Description</p>
}

@if (Model.Rarity != null)
{
    <h3 class="text-light lore-info">Rarity:</h3>
    <p class="text-light lore-info">@Model.Rarity</p>
}

@if (Model.NotableLocations.Count != 0)
{
    <h3 class="text-light lore-info">Notable Locations:</h3>
    string table = "locations";
    @foreach (var loc in Model.NotableLocations)
    {
        int id = loc.id;
        <div class="lore-entry-div">
    <p class="lore-entry" @onclick="() => ReqLore(table, id)">@loc.name</p>
</div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public EventCallback<(string table, int id)> OnReqLoreEvent { get; set; }
    [Parameter]
    public EventCallback<int> OnErrorEvent { get; set; }
    private FullResourceModel? Model { get; set; }

    protected override void OnInitialized()
    {
        Model = Crud.GetFullResourceInfoById(Id);
        if (Model == null)
        {
            OnErrorEvent.InvokeAsync(404);
        }
    }

    private Task ReqLore(string table, int id)
    {
        return OnReqLoreEvent.InvokeAsync((table, id));
    }
}
