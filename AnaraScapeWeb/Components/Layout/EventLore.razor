@using DataAccess
@using DataAccess.Models.LoreModels

@inject ICrud Crud
@inject NavigationManager NavManager

<PageTitle>Lore: @Model!.Name</PageTitle>

<h1 class="text-light">@Model!.Name</h1>

@if (Model.Description != null)
{
    <h3 class="text-light lore-info">Description:</h3>
    <p class="text-light lore-info">@Model.Description</p>
}

@if (Model.StartAgeId != null)
{
    string dateHeader = "Start Date:";
    @if (!Model.IsMultiDayEvent)
    {
        dateHeader = "Date:";
    }
    <h3 class="text-light lore-info">@dateHeader</h3>
    string table = "historical-ages";
    <div class="lore-entry-div">
        <div class="lore-date-div">
            <p class="lore-entry" @onclick="() => ReqLore(table, (int)Model.StartAgeId!)">
                @Model.StartAge</p>
            <p class="text-light date">@Model.StartDate</p>
        </div>
    </div>
}

@if (Model.EndAgeId != null)
{
    <h3 class="text-light lore-info">End Date:</h3>
    string table = "historical-ages";
    <div class="lore-entry-div">
        <div class="lore-date-div">
            <p class="lore-entry" @onclick="() => ReqLore(table, (int)Model.EndAgeId!)">
                @Model.EndAge</p>
            <p class="text-light date">@Model.EndDate</p>
        </div>
    </div>
}

@if (Model.NotableArtifacts.Count != 0)
{
    <h3 class="text-light lore-info">Notable Artifacts:</h3>
    string table = "artifacts";

    @foreach (var art in Model.NotableArtifacts)
    {
        int id = art.id;
        <div class="lore-entry-div">
            <p class="lore-entry" @onclick="() => ReqLore(table, id)">@art.name</p>
        </div>
    }
}

@if (Model.NotableFactions.Count != 0)
{
    <h3 class="text-light lore-info">Notable Factions:</h3>
    string table = "factions";
    @foreach (var fac in Model.NotableFactions)
    {
        int id = fac.id;
        <div class="lore-entry-div">
            <p class="lore-entry" @onclick="() => ReqLore(table, id)">@fac.name</p>
        </div>
    }
}

@if (Model.NotableLocations.Count != 0)
{
    <h3 class="text-light lore-info">Notable Locations:</h3>
    string table = "locations";
    @foreach (var loc in Model.NotableLocations)
    {
        int id = loc.id;
        <div class="lore-entry-div">
            <p class="lore-entry" @onclick="() => ReqLore(table, id)">@loc.name</p>
        </div>
    }
}

@if (Model.NotableNPCs.Count != 0)
{
    <h3 class="text-light lore-info">Notable NPCs</h3>
    string table = "npcs";
    @foreach (var npc in Model.NotableNPCs)
    {
        int id = npc.id;
        <div class="lore-entry-div">
            <p class="lore-entry" @onclick="() => ReqLore(table, id)">@npc.name</p>
        </div>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }

    [Parameter]

    public EventCallback<(string table, int id)> OnReqLoreEvent { get; set; }
    private FullEventModel? Model { get; set; }

    protected override void OnInitialized()
    {
        Model = Crud.GetFullEventInfoById(Id);
        if (Model == null)
        {
            // TODO Log and recover
        }
    }

    private Task ReqLore(string table, int id)
    {
        return OnReqLoreEvent.InvokeAsync((table, id));
    }
}
